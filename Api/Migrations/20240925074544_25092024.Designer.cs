// <auto-generated />
using System;
using ITValet.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITValet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240925074544_25092024")]
    partial class _25092024
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ITValet.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("ITValet.Models.DeliveredOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("OrderDescription")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ValetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DeliveredOrder");
                });

            modelBuilder.Entity("ITValet.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("IsRead")
                        .HasColumnType("int");

                    b.Property<int?>("IsZoomMessage")
                        .HasColumnType("int");

                    b.Property<string>("MessageDescription")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderReasonId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ITValet.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("IsRead")
                        .HasColumnType("int");

                    b.Property<int?>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("ITValet.Models.OfferDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("OfferDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OfferPrice")
                        .HasColumnType("float");

                    b.Property<int?>("OfferStatus")
                        .HasColumnType("int");

                    b.Property<string>("OfferTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ValetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MessageId")
                        .IsUnique()
                        .HasFilter("[MessageId] IS NOT NULL");

                    b.ToTable("OfferDetail");
                });

            modelBuilder.Entity("ITValet.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CapturedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("IsDelivered")
                        .HasColumnType("int");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<string>("OrderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OrderPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("OrderTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageBuyFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<string>("PayPalPaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StripeChargeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StripeStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmountIncludedFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ValetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ITValet.Models.OrderReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ReasonExplanation")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("ReasonType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderReason");
                });

            modelBuilder.Entity("ITValet.Models.PayPalAccountInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<bool>("IsPayPalAuthorized")
                        .HasColumnType("bit");

                    b.Property<string>("PayPalEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ValetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ValetId")
                        .IsUnique()
                        .HasFilter("[ValetId] IS NOT NULL");

                    b.ToTable("PayPalAccount");
                });

            modelBuilder.Entity("ITValet.Models.PayPalOrderCheckOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorizationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaptureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPaymentSentToValet")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRefund")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OrderPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PaidByPackage")
                        .HasColumnType("bit");

                    b.Property<string>("PayPalAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayPalTransactionFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayableAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentTransmitDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ValetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PayPalOrderCheckOut");
                });

            modelBuilder.Entity("ITValet.Models.PayPalPackagesCheckOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<decimal>("PackagePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PackageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayableAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserPackageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PayPalPackagesCheckOut");
                });

            modelBuilder.Entity("ITValet.Models.PayPalToValetTransactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CancelByAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("CancelationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancelationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("OrderCheckOutId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OrderPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayOutItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PlatformFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RecipientEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnedAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SentPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ValetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PayPalToValetTransactions");
                });

            modelBuilder.Entity("ITValet.Models.RequestService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoriesOfProblems")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FromDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("PrefferedServiceTime")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RequestServiceSkills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestServiceType")
                        .HasColumnType("int");

                    b.Property<int?>("RequestedServiceUserId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceDescription")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ServiceLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTitle")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ToDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RequestService");
                });

            modelBuilder.Entity("ITValet.Models.RequestServiceSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("RequestServiceId")
                        .HasColumnType("int");

                    b.Property<string>("RequestServiceName")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RequestServiceId");

                    b.ToTable("RequestServiceSkill");
                });

            modelBuilder.Entity("ITValet.Models.SearchLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("SearchKeyword")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("SearchKeywordCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ValetProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SearchLog");
                });

            modelBuilder.Entity("ITValet.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<decimal?>("AverageRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("HST")
                        .HasColumnType("int");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("IsBankAccountAdded")
                        .HasColumnType("int");

                    b.Property<int?>("IsPayPalAccount")
                        .HasColumnType("int");

                    b.Property<int?>("IsVerify_StripeAccount")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("StarsCount")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StripeId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Availability = 1,
                            BirthDate = new DateTime(2007, 9, 25, 8, 45, 43, 870, DateTimeKind.Local).AddTicks(5929),
                            City = "Alberta",
                            Contact = "00000000000",
                            Country = "Canada",
                            CreatedAt = new DateTime(2024, 9, 25, 7, 45, 43, 870, DateTimeKind.Utc).AddTicks(5971),
                            Email = "usman@gmail.com",
                            FirstName = "Usman",
                            Gender = "Male",
                            IsActive = 1,
                            LastName = "Ali",
                            Password = "2wbYxvfTLTLxw8w3VJHu3+XuhrfrJgyWJuAkx/TmeAY=",
                            PricePerHour = 24.99m,
                            Role = 1,
                            State = "Alberta",
                            Status = 1,
                            Timezone = "Canada/Mountain",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Availability = 1,
                            BirthDate = new DateTime(1998, 9, 25, 8, 45, 43, 870, DateTimeKind.Local).AddTicks(6016),
                            City = "Torronto",
                            Contact = "00000000000",
                            Country = "Canada",
                            CreatedAt = new DateTime(2024, 9, 25, 7, 45, 43, 870, DateTimeKind.Utc).AddTicks(6021),
                            Email = "customer@gmail.com",
                            FirstName = "Michael",
                            Gender = "Male",
                            IsActive = 1,
                            LastName = "Michael",
                            Password = "1FVLWiQ0cZwpEJcDAxDmSn5Ry67+cVBFUP7iMgSQ7Aw=",
                            PricePerHour = 24.99m,
                            Role = 3,
                            State = "Torronto",
                            Status = 1,
                            Timezone = "Canada/Mountain",
                            UserName = "Customer"
                        },
                        new
                        {
                            Id = 3,
                            Availability = 1,
                            BirthDate = new DateTime(2004, 9, 25, 8, 45, 43, 870, DateTimeKind.Local).AddTicks(6074),
                            City = "Torronto",
                            Contact = "00000000000",
                            Country = "Canada",
                            CreatedAt = new DateTime(2024, 9, 25, 7, 45, 43, 870, DateTimeKind.Utc).AddTicks(6078),
                            Email = "ian@gmail.com",
                            FirstName = "Ian",
                            Gender = "Male",
                            IsActive = 1,
                            LastName = "Ian",
                            Password = "JM8Zsm123c943H92zbGS7bPYiniHEhslFM0PuAtEHhg=",
                            PricePerHour = 24.99m,
                            Role = 4,
                            State = "Torronto",
                            Status = 1,
                            Timezone = "Canada/Mountain",
                            UserName = "Valet"
                        });
                });

            modelBuilder.Entity("ITValet.Models.UserAvailableSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeOfDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("Slot1")
                        .HasColumnType("int");

                    b.Property<int?>("Slot2")
                        .HasColumnType("int");

                    b.Property<int?>("Slot3")
                        .HasColumnType("int");

                    b.Property<int?>("Slot4")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAvailableSlot");
                });

            modelBuilder.Entity("ITValet.Models.UserEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DegreeName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstituteName")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserEducation");
                });

            modelBuilder.Entity("ITValet.Models.UserExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime?>("ExperienceFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExperienceTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserExperience");
                });

            modelBuilder.Entity("ITValet.Models.UserPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PackageType")
                        .HasColumnType("int");

                    b.Property<string>("PaidBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RemainingSessions")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TotalSessions")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserPackage");
                });

            modelBuilder.Entity("ITValet.Models.UserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Reviews")
                        .HasColumnType(" nvarchar(1000)");

                    b.Property<int?>("Stars")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ValetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRating");
                });

            modelBuilder.Entity("ITValet.Models.UserReferal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("ReferedByUser")
                        .HasColumnType("int");

                    b.Property<int?>("RefferedId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserReferalCode")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserReferalType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserReferal");
                });

            modelBuilder.Entity("ITValet.Models.UserSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSkill");
                });

            modelBuilder.Entity("ITValet.Models.UserSocialProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSocialProfile");
                });

            modelBuilder.Entity("ITValet.Models.UserTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserTag");
                });

            modelBuilder.Entity("ITValet.Models.Message", b =>
                {
                    b.HasOne("ITValet.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId");

                    b.HasOne("ITValet.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ITValet.Models.Notification", b =>
                {
                    b.HasOne("ITValet.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITValet.Models.OfferDetail", b =>
                {
                    b.HasOne("ITValet.Models.Message", "Message")
                        .WithOne("OfferDetails")
                        .HasForeignKey("ITValet.Models.OfferDetail", "MessageId");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("ITValet.Models.OrderReason", b =>
                {
                    b.HasOne("ITValet.Models.Order", "Order")
                        .WithMany("OrderReason")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ITValet.Models.PayPalAccountInformation", b =>
                {
                    b.HasOne("ITValet.Models.User", "User")
                        .WithOne("PayPalAccountInformation")
                        .HasForeignKey("ITValet.Models.PayPalAccountInformation", "ValetId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITValet.Models.RequestServiceSkill", b =>
                {
                    b.HasOne("ITValet.Models.RequestService", "RequestService")
                        .WithMany("RequestServiceSkill")
                        .HasForeignKey("RequestServiceId");

                    b.Navigation("RequestService");
                });

            modelBuilder.Entity("ITValet.Models.UserAvailableSlot", b =>
                {
                    b.HasOne("ITValet.Models.User", "User")
                        .WithMany("UsersAvailableSlot")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITValet.Models.UserEducation", b =>
                {
                    b.HasOne("ITValet.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITValet.Models.UserExperience", b =>
                {
                    b.HasOne("ITValet.Models.User", "User")
                        .WithMany("Experience")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITValet.Models.UserPackage", b =>
                {
                    b.HasOne("ITValet.Models.User", "User")
                        .WithMany("UserPackage")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITValet.Models.UserSkill", b =>
                {
                    b.HasOne("ITValet.Models.User", "User")
                        .WithMany("UserSkill")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITValet.Models.UserSocialProfile", b =>
                {
                    b.HasOne("ITValet.Models.User", "User")
                        .WithMany("SocialProfile")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITValet.Models.UserTag", b =>
                {
                    b.HasOne("ITValet.Models.User", "User")
                        .WithMany("UserTag")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITValet.Models.Message", b =>
                {
                    b.Navigation("OfferDetails");
                });

            modelBuilder.Entity("ITValet.Models.Order", b =>
                {
                    b.Navigation("OrderReason");
                });

            modelBuilder.Entity("ITValet.Models.RequestService", b =>
                {
                    b.Navigation("RequestServiceSkill");
                });

            modelBuilder.Entity("ITValet.Models.User", b =>
                {
                    b.Navigation("Experience");

                    b.Navigation("PayPalAccountInformation");

                    b.Navigation("SocialProfile");

                    b.Navigation("UserPackage");

                    b.Navigation("UserSkill");

                    b.Navigation("UserTag");

                    b.Navigation("UsersAvailableSlot");
                });
#pragma warning restore 612, 618
        }
    }
}
